---
title: "*Sargassum* arribazon"
subtitle: "Some graphs for Nancy"
date: "`r Sys.Date()`"
author: 
  - name: Diego Lizcano
    orcid: https://orcid.org/0000-0002-9648-0576
  - name: Nancy Cabanillas-Terán
    orcid: https://orcid.org/0000-0003-1268-5900
license: CC BY-SA
toc: true
format: 
  html:
    theme: 
      light: flatly
      dark: darkly
    code-fold: true
    code-block-bg: true
    code-block-border-left: "#31BAE9"
citation: true
google-scholar: true
bibliography: grateful-refs.bib
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>",
  dev = "png",
  dev.args = list(type = "cairo-png"),
  fig.width = 7,
  fig.height = 5,
  fig.align = "center",
  eval = TRUE,
  echo = TRUE,
  warning = FALSE,
  error = FALSE,
  message = FALSE,
  cache=TRUE)
```

## Question

Which is the relationship between DO (oxigen) and distance to coast line on Sargassum plumes? 

![Sargassum plume](https://dlizcano.github.io/Sargasso/img/drone2.jpg){.lightbox}

## Set up analysis

Load libraries and set some options.

```{r set_up}
#| warning: false
#| message: false

library(readxl) # Read Excel Files # Read Excel Files
library(gt) # Easily Create Presentation-Ready Display Tables
library(lubridate) # Make Dealing with Dates a Little Easier
library(stringr) # Simple, Consistent Wrappers for Common String Operations
library(readxl) # Read Excel Files # Read Excel Files
library(sf) # Simple Features for R
# library(MuMIn) # multimodel inference
library(visreg) # see trend
library(MASS) # stepAIC
# library(terra)
library(lme4) # mix model
library(sjPlot) # Data Visualization for Statistics in Social Science
library(see) # Model Visualisation Toolbox for 'easystats' and 'ggplot2'
library(performance) # Assessment of Regression Models Performance
library(mapview) # Interactive Viewing of Spatial Data in R
library(corrplot) # Visualization of a Correlation Matrix
library(DT) # A Wrapper of the JavaScript Library 'DataTables'
library(measurements) # transform DMS to lat lon
library(ggeffects) # Create Tidy Data Frames of Marginal Effects for 'ggplot' from Model Outputs
library(grateful)

library(tidyverse) # Easily Install and Load the 'Tidyverse'



options(scipen=99999)
options(max.print=99999)
options(stringsAsFactors=F)
```

## Load data 

No  Map, the data has not latitude longitude

```{r}
sargasso <- read_excel("C:/CodigoR/Nancy2/data/PARAEMETROS_FQ2.xlsx", 
    sheet = "alta_baja")


# sargasso$lat <- as.numeric(conv_unit(sargasso$Lattitude, from = "deg_min_sec", to = "dec_deg"))
# sargasso$lon <- conv_unit(sargasso$Longitude , from = "deg_min_sec", to = "dec_deg") 
# sargasso$lon <- as.numeric(sargasso$lon)*(-1)

######################
# Make map #
######################
# convierte covs a puntos terra
# puntos <- vect(sargasso, geom=c("lon", "lat"), crs="EPSG:4326")
# convierte a sf

# sargasso_sf <- sf::st_as_sf(sargasso, 
#                             coords = c("lon", "lat"),
#                             crs="EPSG:4326")
# 
# mapview(sargasso_sf, zcol="DO_mgL")

```

## Relation DO\[mgL\] and distance to coastline, pluma, temporada, and locality

### ggplot graph (Loess method)

```{r}
# Add the regression line Loess method
ggplot(sargasso, aes(x=Distance_coast, y=DO_mgL, color=Pluma)) + 
  geom_point()+
  geom_smooth() + # method=lm
  scale_color_manual (values=c("#33ccf3", "#f35a33" )) +
  facet_grid(Temporada ~ Locality, scales = "free")

# # Marginal density plot of x (top panel)
# xdensity <- ggplot(sargasso, aes(Distance_coast, fill=Pluma)) + 
#   geom_density(alpha=.5) + 
#   scale_fill_manual(values = c('#999999','#E69F00')) + # + 
#   # theme(legend.position = "none")
#    facet_grid(Temporada ~ Locality, scales = "free")
# xdensity

```

### Regresion models

#### A simple model

$$
DO_mgL \sim DistanceCoast + Pluma + Temporada + Locality
$$

```{r}
lm1 <- lm(DO_mgL ~ Distance_coast + Pluma + Temporada + Locality, data = sargasso)

dat <- predict_response(lm1, terms = c("Distance_coast", "Pluma", "Temporada", "Locality"))
plot(dat, facets = TRUE)

out1 <- check_model(lm1)
plot(out1)

summary(lm1)
tab_model(summary(lm1))
#visreg(glm2, xvar = c("Distance_coast"), 
#       yvar="DO_mgL",
#       by="Pluma")

```

#### A model with 2 interaction between distance and temporada

$$
DO_mgL \sim DistanceCoast * Temporada + Pluma + Locality
$$

```{r}
lm2 <- lm(formula = DO_mgL ~ Distance_coast * Temporada +  Pluma + Locality,   data = sargasso)

dat2 <- predict_response(lm2, terms = c("Distance_coast", "Pluma", "Temporada", "Locality"))
plot(dat2, facets = TRUE)

plot_model(lm2, type = "est")
# plot_model(lm2, type = "re") # in case random effect
plot_model(lm2, type = "pred")


out2 <- check_model(lm2)
plot(out2)

tab_model(summary(lm2))


```

complex to interpret

#### Three-Way-Interaction

$$
DO_mgL \sim DistanceCoast * Temporada * Pluma
$$

```{r}
lm3 <- lm(formula = DO_mgL ~ Distance_coast * Temporada * Pluma ,   data = sargasso)

plot_model(lm3, type = "int")

out3 <- check_model(lm3)
plot(out3)

tab_model(summary(lm3))


```

#### Mix effect model. Random effect in Locality

$$
DO_mgL \sim DistanceCoast + Temporada + Pluma + (1|Locality)
$$

```{r}
lm4 <- lmer(formula = DO_mgL ~ Distance_coast + Temporada + Pluma + (1|Locality),   data = sargasso)


dat4 <- predict_response(lm4, terms = c("Distance_coast", "Pluma", "Temporada", "Locality"))
plot(dat4, facets = TRUE)

plot_model(lm4, type = "est")
plot_model(lm4, type = "re")
plot_model(lm4, type = "pred")


out4 <- check_model(lm4)#, panel=FALSE)
plot(out4)

tab_model((lm4))
```


#### Mix effect model. Interaction and random effect in Locality

$$
DO_mgL \sim DistanceCoast * Temporada + Pluma + (1|Locality)
$$

```{r}
lm5 <- lmer(formula = DO_mgL ~ Distance_coast * Temporada + Pluma + (1|Locality),   data = sargasso)


dat5 <- predict_response(lm5, terms = c("Distance_coast", "Pluma", "Temporada", "Locality"))
plot(dat5, facets = TRUE)


plot_model(lm5, type = "est")
plot_model(lm5, type = "re")
plot_model(lm5, type = "pred")

out5 <- check_model(lm5)
plot(out5)

tab_model((lm5))

```


## Which model can be the best?

Lets compare the model performance

```{r}

result <- compare_performance(lm1, lm2, lm3, lm4, lm5, rank=TRUE)

DT::datatable(result)

plot(result)


```

Larger values indicate better model performance. Hence, points closer to the center indicate worse fit indices.


## Package Citation

```{r }
pkgs <- cite_packages(output = "paragraph", out.dir = ".")
knitr::kable(pkgs)
# pkgs
```


## Información de la sesión en R.

```{r sesion, results='markup'}
sessionInfo()
```

